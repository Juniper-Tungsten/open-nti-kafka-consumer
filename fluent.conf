# In v1 configuration, type and id are @ prefix parameters.
# @type and @id are recommended. type and id are still available for backward compatibility

## built-in TCP input
## $ echo <json> | fluent-cat <tag>

<source>
  @type forward
  @id forward_input
</source>

#################
## Input      ###
#################

<source>
  @type  kafka
  host   "{{ KAFKA_ADDR }}"
  port   "{{ KAFKA_PORT}}"
  topics "{{ KAFKA_TOPIC }}"
  format "{{ KAFKA_DATA_TYPE }}"
  #message_key <key (Optional, for text format only, default is message)>
  #add_prefix <tag prefix (Optional)>
  #add_suffix <tag suffix (Optional)>
  #max_bytes           (integer)    :default => nil (Use default of Poseidon)
  #max_wait_ms         (integer)    :default => nil (Use default of Poseidon)
  #min_bytes           (integer)    :default => nil (Use default of Poseidon)
  #socket_timeout_ms   (integer)    :default => nil (Use default of Poseidon)
</source>

#################
## Output     ###
#################

<match {{ FLUENTD_TAG }}.**>
    type copy
{% if OUTPUT_STDOUT == 'true' %}
    <store>
        @type stdout
        @id stdout_output
    </store>
{% endif %}
{% if OUTPUT_INFLUXDB == 'true' %}
    <store>
        type influxdb

        host "{{ INFLUXDB_ADDR }}"
        port "{{ INFLUXDB_PORT }}"
        dbname "{{ INFLUXDB_DB }}"
        user "{{ INFLUXDB_USER }}"
        password "{{ INFLUXDB_PWD }}"

        value_keys ["{{ INFLUXDB_VALUE_KEY }}"]
        ####
        buffer_type memory
        # buffer_chunk_limit 524288 # 512 * 1024
        # buffer_queue_limit 1024
        flush_interval "{{ INFLUXDB_FLUSH_INTERVAL }}"
        # retry_limit 17
        # retry_wait 1.0
        # num_threads 1
    </store>
{% endif %}
## TODO investigate forest plugin https://github.com/tagomoris/fluent-plugin-forest
</match>

# Listen HTTP for monitoring
# http://localhost:24220/api/plugins
# http://localhost:24220/api/plugins?type=TYPE
# http://localhost:24220/api/plugins?tag=MYTAG
<source>
  @type monitor_agent
  @id monitor_agent_input
  port 24220
</source>

# Listen DRb for debug
<source>
  @type debug_agent
  @id debug_agent_input
  bind 127.0.0.1
  port 24230
</source>

## match tag=debug.** and dump to console
<match debug.**>
  @type stdout
  @id stdout_output
</match>

# match fluent's internal events
<match fluent.**>
  @type stdout
</match>
